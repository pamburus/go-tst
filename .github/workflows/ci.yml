name: CI

on:
  push:
    tags:
      - v*
    branches:
      - master
      - main
  pull_request:

permissions:
  contents: read

env:
  GO_VERSION: '1.23'
  GOLANGCI_LINT_VERSION: 'v1.61'

jobs:
  lint:
    name: Run linters
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache-dependency-path: "**/*.sum"
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}

  test:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache-dependency-path: "**/*.sum"
      - name: go test
        run: go test -fullpath -race ./...

  complete:
    name: 'Complete'
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: ${{ always() }}
    steps:
      - name: 'Check if all jobs passed'
        run: |
          needs_json='${{ toJSON(needs) }}'
          job_names=$(echo "$needs_json" | jq -r 'keys[]')
          failed_jobs=()
          for job in $job_names; do
            job_status=$(echo "$needs_json" | jq -r '."'${job}'".result')
            if [ "$job_status" != "success" ]; then
              failed_jobs+=($job)
            fi
          done
          if [ ${#failed_jobs[@]} -ne 0 ]; then
            echo "The following jobs failed: ${failed_jobs[@]}"
            exit 1
          else
            echo "All jobs passed."
          fi
